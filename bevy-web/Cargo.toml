[package]
name = "bevy-web"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
bevy = "0.12.1"

# wasm-bindgen实现了Rust和JavaScript之间的高级别互操作。 它允许将JavaScript的内容导入到Rust和将Rust内容导出给JavaScript。
wasm-bindgen = "0.2.87" 

# wasm-bindgen-futures 是一个连接JavaSript的Promise和Rust的Future的桥梁。 
# 它可以在两个方向执行转换并且当在Rust中执行异步任务的时候很有用，同时允许与DOM时间和I/O操作互操作。
wasm-bindgen-futures = "0.4.30"

# 原生的wasm-bindgen导入了所有的Web API，比如DOM操作，setTimeout，Web GL， Web Audio等。
# web-sys = { version = "0.3.53", features = [
#     "Document",
#     "Window",
#     "Element",
# ]}

# 这个crate允许你通过提供一个转发错误消息到console.error的钩子来在wasm32-unknown-unknown上进行调试。
console_error_panic_hook = {version = "0.1.7",optional = true}

# 这个crate为log crate提供了一个后端，它能把日志消息路由到开发工具控制台。
console_log = "1.0"

# Wasm-Enabled, Elfin 分配器。 一个小的（~1K未压缩的.wasm）分配器实现，用在代码尺寸比分配性能更受关注的时候。
wee_alloc = { version = "0.4.5", optional = true }

# 生成随机id
uuid = "1.6.1"

# 相机控制器
smooth-bevy-cameras = "0.10.0"


[dependencies.web-sys]
version = "0.3.61"
features = [
    "AbortController",
    "AbortSignal",
    "BeforeUnloadEvent",
    "Blob",
    "BinaryType",
    "CanvasRenderingContext2d",
    "CloseEvent",
    "console",
    "CustomEvent",
    "CustomEventInit",
    "DataTransfer",
    "Document",
    "DomException",
    "DragEvent",
    "Element",
    "Event",
    "EventTarget",
    "File",
    "FormData",
    "HashChangeEvent",
    "Headers",
    "History",
    "HtmlElement",
    "HtmlCanvasElement",
    "HtmlCollection",
    "HtmlDocument",
    "HtmlDivElement",
    "HtmlInputElement",
    "HtmlMenuItemElement",
    "HtmlProgressElement",
    "HtmlOptionElement",
    "HtmlDataElement",
    "HtmlMeterElement",
    "HtmlLiElement",
    "HtmlOutputElement",
    "HtmlParamElement",
    "HtmlTextAreaElement",
    "HtmlSelectElement",
    "HtmlButtonElement",
    "HtmlFormElement",
    "Location",
    "MessageEvent",
    "MouseEvent",
    "Navigator",
    "Node",
    "NodeList",
    "Performance",
    "PointerEvent",
    "PopStateEvent",
    "ReferrerPolicy",
    "Request",
    "RequestCache",
    "RequestCredentials",
    "RequestInit",
    "RequestMode",
    "RequestRedirect",
    "Response",
    "Selection",
    "Storage",
    "TcpReadyState",
    "Text",
    "Touch",
    "TouchEvent",
    "TouchList",
    "console",
    "WebSocket",
    "Window",
    "KeyboardEvent",
    "InputEvent",
    "WheelEvent",
    "Url",
    "UrlSearchParams",
]



# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3
